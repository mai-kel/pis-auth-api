version: '3.8'

networks:
  shared-network:
    name: shared-network
    external: true
    driver: bridge

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: auth_password
      POSTGRES_DB: auth_db
    ports:
      - "5435:5432"
    networks:
      - shared-network

  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - "2181:2181"
    networks:
      - shared-network

  kafka:
    image: bitnami/kafka:3.5
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092
      KAFKA_LISTENERS: PLAINTEXT://:29092
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    networks:
      - shared-network

  auth-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: auth-api
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/auth_db
      SPRING_DATASOURCE_USERNAME: auth_user
      SPRING_DATASOURCE_PASSWORD: auth_password
      KAFKA_BROKERS: kafka:29092
      SPRING_KAFKA_BOOTSTRAP-SERVERS: kafka:29092
      SPRING_KAFKA_PRODUCER_BOOTSTRAP-SERVERS: kafka:29092
    ports:
      - "8181:8005"
    depends_on:
      - postgres
      - kafka
    networks:
      - shared-network

  nginx:
    image: nginx
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - auth-api
    networks:
      - shared-network
